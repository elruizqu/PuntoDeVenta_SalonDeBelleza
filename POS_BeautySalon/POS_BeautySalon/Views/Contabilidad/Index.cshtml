@{
    var resumenVentas = ViewBag.ResumenVentas; //Ventas
    var reporteBalances = ViewBag.ReporteBalances;// Reporte
    var facturasDelDia = ViewBag.FacturasDelDia; // Lista de facturas del día
}



<style>
    h2 {
        font-family: Arial, sans-serif;
        color: #333;
    }

    p {
        font-family: Arial, sans-serif;
        color: #555;
    }

    canvas {
        margin: 20px 0;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@model dynamic
<br />
<h1 class="titulos_cat">Contabilidad</h1>
<br />


<div class="row fondoTransparente">
    <h3>Ventas del día </h3>
    <br />
    <section class="modulo">
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Factura ID</th>
                    <th>Cliente</th>
                    <th>Pago Realizado</th>
                    <th>Fecha</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var factura in facturasDelDia)
                {
                    <tr>
                        <td>@factura.FacturaId</td>
                        <td>@factura.Cliente.UserName</td>
                        <td>@factura.PrecioTotal</td>
                        <td>@factura.Fecha.ToShortDateString()</td>
                        <td>
                            <a href="@Url.Action("VerDetalle", "Cierre", new { facturaId = factura.FacturaId })" class="w-40 btn btn-lg btn-dark" style="background-color:pink; color: black;">Ver Detalles</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
    <br />
    <br />
    <!-- Contenedor principal -->
    <div class="container">
        <!-- Fila para el resumen de ventas -->
        <div class="row">
            <!-- Tarjeta para el resumen de ventas -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Resumen de Ventas</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Total de Ventas:</strong> <span class="text-primary">@resumenVentas.TotalVentas</span></p>
                        <p><strong>Ganancia total en venta de Productos:</strong> <span class="text-primary">@resumenVentas.TotalProductos</span></p>
                        <p><strong>Ganancia total en venta de Servicios:</strong> <span class="text-primary">@resumenVentas.TotalServicios</span></p>
                    </div>
                </div>
            </div>

            <!-- Tarjeta para el reporte de balances generales -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Reporte de Balances Generales</h3>
                    </div>
                    <div class="card-body">
                        
                        <p><strong>Ingreso total en venta de productos y servicios al ultimo cierre:</strong> <span class="text-primary">@reporteBalances.TotalIngresos</span></p>
                        <p><strong>Costo total de los productos (precio proveedor):</strong> <span class="text-primary">@reporteBalances.TotalCostos</span></p>
                        <p><strong>Ganancia Neta a la fecha:</strong> <span class="text-primary">@reporteBalances.TotalGanancia</span></p>
                    </div>
                </div>
            </div>
        </div>
    </div>


   
<br>
<br>


<!-- Contenedor para el gráfico -->
<h2>Reporte de Ventas</h2>
<canvas id="ventasChart" width="400" height="200"></canvas>
<br />
<br />
<h2>Reporte de Balance General </h2>
<canvas id="balancesChart" width="400" height="200"></canvas>
 
 
<script>
        var ctxVentas = document.getElementById('ventasChart').getContext('2d');
        var ventasChart = new Chart(ctxVentas, {
            type: 'bar',
            data: {
                labels: ['Total Productos', 'Total Servicios'], // Etiquetas para cada barra
                datasets: [{
                    label: 'Total Productos', // Etiqueta para el primer dataset
                    data: [@ViewBag.ResumenVentas.TotalProductos, 0], // Los datos para "Total Productos"
                    backgroundColor: '#40c5d7'
                },
                {
                    label: 'Total Servicios', // Etiqueta para el segundo dataset
                    data: [0, @ViewBag.ResumenVentas.TotalServicios], // Los datos para "Total Servicios"
                    backgroundColor: '#da3f67'
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
 
        var ctxBalances = document.getElementById('balancesChart').getContext('2d');
        var balancesChart = new Chart(ctxBalances, {
            type: 'bar',
            data: {
                labels: ['Total Costos', 'Total Ingresos', 'Total Ganancias'], // Etiquetas para las barras
                datasets: [{
                    label: 'Total Ingresos', // Etiqueta para el segundo dataset
                    data: [0, @ViewBag.ReporteBalances.TotalIngresos, 0], // Valor solo para "Total Ingresos"
                    backgroundColor: '#50eacb' // Color para "Total Ingresos"
                },
                {
                    label: 'Total Costos', // Etiqueta para el primer dataset
                    data: [@ViewBag.ReporteBalances.TotalCostos, 0, 0], // Valor solo para "Total Stock Valor"
                    backgroundColor: '#f04f3c' // Color para "Total Stock Valor"

                    
                },
                {
                    label: 'Total Ganancias', // Etiqueta para el tercer dataset
                    data: [0, 0, @ViewBag.ReporteBalances.TotalGanancia], // Valor solo para "Total Costos"
                    backgroundColor: '#85ff6f' // Color para "Total Costos"
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true // Comenzar el eje Y desde 0
                    }
                }
            }
        });
</script>


        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
       
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
